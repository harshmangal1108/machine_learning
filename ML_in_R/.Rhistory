setwd("/home/harsh/projects/text_analysis_and_pred
")
setwd('/home/harsh/projects/text_analysis_and_pred
'')
setwd('/home/harsh/projects/text_analysis_and_pred
')
;
hi
4+4
)
setwd(/home/harsh/projects/text_analysis_and_pred
)
setwd("~/projects/text_analysis_and_pred")
setwd("~/projects/text_analysis_and_pred")
Salaries <- read.csv("~/Downloads/Salaries.csv")
View(Salaries)
mean(Salaries$salary)
while Salaries$rank
while Salaries$rank{}
while Salaries$rank:
while Salaries$rank
while(Salaries$rank){}
while Salaries$rank}
while(Salaries$rank){}
while(Salaries$rank){
}
max(Salaries$yrs.since.phd)
while(Salaries$rank){
max(Salaries$yrs.since.phd)}
for (i in Salaries$rank){
print(max(Salaries$yrs.since.phd))
}
for (i in Salaries$rank){
if (Salaries$rank=="Prof"){
print(max(Salaries$yrs.since.phd))
}}
while (Salaries$rank='Prof'){
while (Salaries$rank=='Prof'){
print(max(Salaries$yrs.since.phd))
}
while (Salaries$rank){
if (Salaries$rank == "Prof"){
print(max(Salaries$yrs.since.phd))
}
}
median(Salaries$yrs.service)
var(Salaries$salary)
Salaries <- read.csv("~/Downloads/bigcity.csv")
View(Salaries)
mean(Salaries$X_1920)
mean(Salaries$Y_1930)
103.1423-127.7959
t.test(Salaries$X_1920)
A=matrix(c(4,-1,-1,2),2,2)
A
eigen(A)
A=matrix(c(-4,2,2,4),2,2)
A
eigen(A)
A=matrix(c(240,-120,-120,60),2,2)
A
eigen(A)
A=matrix(c(242,-120,-120,60),2,2)
eigen(A)
data=read.delim("/home/harsh/Downloads/Auto.csv")
adata=read.delim("/home/harsh/Downloads/Auto.csv")
adata=read.csv("/home/harsh/Downloads/Auto.csv")
adata
amod<-lm(mpg~weight,data = adata)
summary(amod)
quantile(adata)
quantile(adata$mpg)
cor(adata$mpg,adata$weight , method = c("pearson", "kendall", "spearman"))
quantile(adata)
summary(amod)
setwd("~/ML_in_R")
### IT is supervised approach
### clearing the environment
rm(list = ls())
## install package
install.packages("caret",dependencies = TRUE)
## install package
#install.packages("caret",dependencies = TRUE)
library(caret)
#### reading data
crashTest_1<-read.csv("crashTest_1.csv",row.names = 1)
crashTest_1_Test<-read.csv("crashTest_1_TEST.csv",row.names = 1)
### view data
View(crashTest_1)
View(crashTest_1_Test)
### structure of data
str(crashTest_1)
### summary
summary(crashTest_1)
summary(crashTest_1_Test)
##### glm is used for logistic regression
### glm is genrailised linear model
logisfit<-glm(formula = crashTest_1$CarType~.,family = 'binomial',data = crashTest_1)
logisfit
## summary
summary(logisfit)
### PREDICTION
logistrain<-predict(logisfit,type = 'response')
###3 plot the probablities
plot(logistrain)
### probablities of car type
tapply(logistrain,crashTest_1$CarType,mean)
### prediction on test data
logispred<-predict(logisfit,newdata = crashTest_1_Test,type = 'response')
plot(logispred)
logispred
#### to check how accurately our classifier is able to classify
crashTest_1_Test[logispred<=0.5,"logispred"]<-"Hatchback"
crashTest_1_Test[logispred>0.5,"logispred"]<-"SUV"
source('~/ML_in_R/logistic_reg.R', echo=TRUE)
### Confusion matrix
confusionMatrix(crashTest_1[,7],crashTest_1_Test[,6],positive = "Hatchback")
### Confusion matrix
confusionMatrix(table(crashTest_1[,7],crashTest_1_Test[,6]),positive = "Hatchback")
### Confusion matrix
confusionMatrix(table(crashTest_1_Test[,7],crashTest_1_Test[,6]),positive = "Hatchback")
bonds<-read.delim("/home/harsh/Downloads/auto_mpg.csv",row.names = 1)
summary(bonds)
bonds<-read.delim("/home/harsh/Downloads/auto_mpg.csv",row.names = 1)
summary(bonds)
View(bonds)
View(bonds)
View(bonds)
View(bonds)
x<-read.csv("/home/harsh/Downloads/auto_mpg.csv",row.names = 1)
x<-read.csv("/home/harsh/Downloads/auto_mpg.csv")
View(x)
View(x)
summary(x)
View(x)
View(x)
nycmod_1 <- lm(Price~.,data=x)
nycmod_1 <- lm(mpg~.,data=x)
summary(nycmod_1)
model_3<-lm(mpg~cylinders+horsepower+weight+model_year)
model_3<-lm(mpg~cylinders+horsepower+weight+model_year,data = x)
summary(model_3)
crashtrain<-read.csv("/home/harsh/Downloads/Titanic_Train.csv",row.names = 1)
crashTest<-read.csv("/home/harsh/Downloads/Titanic_Test.csv.csv",row.names = 1)
crashTest<-read.csv("/home/harsh/Downloads/Titanic_Test.csv",row.names = 1)
crashTest<-read.csv("/home/harsh/Downloads/Titanic_Test.csv")
crashtrain<-read.csv("/home/harsh/Downloads/Titanic_Train.csv")
crashTest<-read.csv("/home/harsh/Downloads/Titanic_Test.csv")
View(crashtrain)
View(crashtrain)
logisfit<-glm(formula = crashtrain$Survived~.,family = 'binomial',data = crashtrain)
summary(logisfit)
logispred<-predict(logisfit,newdata = crashTest,type = 'response')
confusionMatrix(table(crashTest[,7],crashTest[,6]),positive = "Hatchback")
crashTest_1_Test[logispred<=0.5,"logispred"]<-"Hatchback"
crashTest_1_Test[logispred>0.5,"logispred"]<-"SUV"
crashTest[logispred<=0.5,"logispred"]<-"Hatchback"
crashTest[logispred>0.5,"logispred"]<-"SUV"
confusionMatrix(table(crashTest[,7],crashTest[,6]),positive = "Hatchback")
View(crashTest)
View(crashtrain)
View(crashtrain)
confusionMatrix(table(crashTest[],crashTest[]),positive = "Hatchback")
crashTest[logispred<=0.5,"logispred"]<-"0"
crashTest[logispred>0.5,"logispred"]<-"1"
plot(logispred)
logisfit<-glm(formula = crashtrain$Survived~.,family = 'binomial',data = crashtrain)
summary(logisfit)
logistrain<-predict(logisfit,type = 'response')
logispred<-predict(logisfit,newdata = crashTest,type = 'response')
crashTest[logispred<=0.5,"logispred"]<-"0"
crashTest[logispred>0.5,"logispred"]<-"1"
confusionMatrix(table(crashTest[],crashTest[]),positive = "Hatchback")
plot(logispred)
